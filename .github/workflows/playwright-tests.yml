# Назва вашого автоматичного процесу
name: Playwright Tests with Allure Report

# Умови запуску
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Надаємо дозволи для публікації на GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Завдання, які будуть виконуватись
jobs:
  test:
    name: Run tests and generate report
    runs-on: ubuntu-latest
    steps:
      # 1. Клонуємо репозиторій
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Встановлюємо Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Встановлюємо Allure CLI (використовуємо актуальну версію)
      - name: Set up Allure
        uses: allure-framework/setup-allure@v5

      # 4. Встановлюємо залежності проєкту
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Встановлюємо браузери для Playwright
      - name: Install Playwright browsers
        run: python -m playwright install chromium --with-deps

      # 6. Запускаємо тести з генерацією результатів Allure
      - name: Run Playwright tests
        run: pytest --alluredir=allure-results

      # 7. Генеруємо HTML-звіт Allure з отриманих результатів
      - name: Generate Allure report
        run: allure generate allure-results --clean -o allure-report

      # 8. Завантажуємо звіт як артефакт для GitHub Pages
      - name: Upload Allure report artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

  # Завдання для публікації звіту
  deploy:
    name: Deploy Allure report to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # Публікуємо артефакт на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4